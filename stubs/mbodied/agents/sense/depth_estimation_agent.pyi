from _typeshed import Incomplete
from mbodied.agents.sense.sensory_agent import SensoryAgent as SensoryAgent
from mbodied.types.sense.vision import Image as Image

class DepthEstimationAgent(SensoryAgent):
    '''A depth estimation agent that uses a remote depth estimation (Depth Anything) server to estimate depth from an image.

    Usage:
    >>> agent = DepthEstimationAgent(model_src="https://api.mbodi.ai/depth/")
    >>> result = agent.act(image=Image("resources/xarm.jpeg", size=(224, 224)))
    '''
    def __init__(self, model_src: str = 'https://api.mbodi.ai/sense/', model_kwargs: Incomplete | None = None, **kwargs) -> None: ...
    def act(self, image: Image, *args, api_name: str = '/depth', **kwargs) -> Image:
        """Act based on the prompt and image using the remote depth estimation server.

        Args:
            image (Image): The image to act on.
            *args: Variable length argument list.
            **kwargs: Arbitrary keyword arguments.

        Returns:
            Image: The depth image generated by the agent
        """
